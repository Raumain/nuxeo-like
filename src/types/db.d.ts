/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface DocumentMetadata {
  data: Json;
  documentId: string;
  id: Generated<string>;
}

export interface Documents {
  createdAt: Generated<Timestamp>;
  createdBy: string | null;
  id: Generated<string>;
  isFolder: Generated<boolean>;
  parentId: string;
  path: string;
  slug: string;
  title: string;
  typeId: string;
  updatedAt: Generated<Timestamp>;
}

export interface DocumentTypes {
  id: Generated<string>;
  isFolder: Generated<boolean>;
  name: string;
  schema: Json;
}

export interface DocumentVersions {
  createdAt: Generated<Timestamp>;
  dataSnapshot: Json;
  documentId: string;
  fileUrl: string | null;
  id: Generated<string>;
  versionNumber: string;
}

export interface Files {
  createdAt: Generated<Timestamp>;
  createdBy: string;
  id: Generated<string>;
  name: string;
  path: string;
  size: number;
  tags: Generated<Json | null>;
  type: string;
  updatedAt: Generated<Timestamp>;
  updatedBy: string;
  workspaceId: string;
}

export interface Groups {
  createdAt: Generated<Timestamp>;
  createdBy: string;
  id: Generated<string>;
  name: string;
  updatedAt: Generated<Timestamp>;
  updatedBy: string;
}

export interface Permissions {
  accessType: string;
  documentId: string;
  id: Generated<string>;
  userId: string;
}

export interface Users {
  createdAt: Generated<Timestamp>;
  createdBy: string;
  email: string;
  firstName: string;
  groups: string;
  id: string;
  lastName: string;
  updatedAt: Generated<Timestamp>;
  updatedBy: string;
}

export interface Workspaces {
  createdAt: Generated<Timestamp>;
  createdBy: string;
  description: string | null;
  id: Generated<string>;
  name: string;
  updatedAt: Generated<Timestamp>;
  updatedBy: string;
}

export interface DB {
  documentMetadata: DocumentMetadata;
  documents: Documents;
  documentTypes: DocumentTypes;
  documentVersions: DocumentVersions;
  files: Files;
  groups: Groups;
  permissions: Permissions;
  users: Users;
  workspaces: Workspaces;
}
